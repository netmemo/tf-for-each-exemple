C:\Users\noyel\Desktop\tfforeach\aws>terraform plan

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_subnet.main-subnet["sub-1"] will be created
  + resource "aws_subnet" "main-subnet" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = "use2-az1"
      + cidr_block                      = "10.0.198.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "nbo-subnet-sub-1"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.main-subnet["sub-2"] will be created
  + resource "aws_subnet" "main-subnet" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = "use2-az2"
      + cidr_block                      = "10.0.199.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "nbo-subnet-sub-2"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.main-subnet["sub-3"] will be created
  + resource "aws_subnet" "main-subnet" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = "use2-az3"
      + cidr_block                      = "10.0.200.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "nbo-subnet-sub-3"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.main-vpc will be created
  + resource "aws_vpc" "main-vpc" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = (known after apply)
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name" = "main-vpc"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.


C:\Users\noyel\Desktop\tfforeach\aws>terraform apply

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_subnet.main-subnet["sub-1"] will be created
  + resource "aws_subnet" "main-subnet" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = "use2-az1"
      + cidr_block                      = "10.0.198.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "nbo-subnet-sub-1"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.main-subnet["sub-2"] will be created
  + resource "aws_subnet" "main-subnet" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = "use2-az2"
      + cidr_block                      = "10.0.199.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "nbo-subnet-sub-2"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.main-subnet["sub-3"] will be created
  + resource "aws_subnet" "main-subnet" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = "use2-az3"
      + cidr_block                      = "10.0.200.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "nbo-subnet-sub-3"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.main-vpc will be created
  + resource "aws_vpc" "main-vpc" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = (known after apply)
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name" = "main-vpc"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_vpc.main-vpc: Creating...
aws_vpc.main-vpc: Creation complete after 7s [id=vpc-08528ea3ffd9c29db]
aws_subnet.main-subnet["sub-2"]: Creating...
aws_subnet.main-subnet["sub-3"]: Creating...
aws_subnet.main-subnet["sub-1"]: Creating...
aws_subnet.main-subnet["sub-3"]: Creation complete after 2s [id=subnet-071f2602092cb49bb]
aws_subnet.main-subnet["sub-2"]: Creation complete after 2s [id=subnet-04067dc2ecf84ae1c]
aws_subnet.main-subnet["sub-1"]: Creation complete after 3s [id=subnet-0912c92ce09fac18b]

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.